# This example demonstrates the ability to pass artifacts
# from one step to the next.
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: artifact-passing-
spec:
  entrypoint: artifact-example
  templates:
    - name: artifact-example
      steps:
        - - name: generate-artifact
            template: whalesay
        - - name: consume-artifact
            template: print-message
            arguments:
              artifacts:
                # bind message to the hello-art artifact
                # generated by the generate-artifact step
                - name: message
                  from: "{{steps.generate-artifact.outputs.artifacts.hello-art}}"

    - name: whalesay
      container:
        image: docker/whalesay:latest
        command: [sh, -c]
        args: ["sleep 1; cowsay hello world | tee /tmp/hello_world.txt"]
      outputs:
        artifacts:
          # generate hello-art artifact from /tmp/hello_world.txt
          # artifacts can be directories as well as files
          - name: hello-art
            path: /tmp/hello_world.txt

    - name: print-message
      inputs:
        artifacts:
          # unpack the message input artifact
          # and put it at /tmp/message
          - name: message
            path: /tmp/message
      container:
        image: alpine:latest
        command: [sh, -c]
        args: ["cat /tmp/message"]
# ---

# <... snipped ...>
#   - name: large-artifact
#     # below patch gets merged with the actual pod spec and increses the memory
#     # request of the init container.
#     podSpecPatch: |
#       initContainers:
#         - name: init
#           resources:
#             requests:
#               memory: 2Gi
#               cpu: 300m
#     inputs:
#       artifacts:
#       - name: data
#         path: /tmp/large-file
#     container:
#       image: alpine:latest
#       command: [sh, -c]
#       args: ["cat /tmp/large-file"]
# <... snipped ...>

# ---

# <... snipped ...>
#     outputs:
#       artifacts:
#         # default behavior - tar+gzip default compression.
#       - name: hello-art-1
#         path: /tmp/hello_world.txt

#         # disable archiving entirely - upload the file / directory as is.
#         # this is useful when the container layout matches the desired target repository layout.
#       - name: hello-art-2
#         path: /tmp/hello_world.txt
#         archive:
#           none: {}

#         # customize the compression behavior (disabling it here).
#         # this is useful for files with varying compression benefits,
#         # e.g. disabling compression for a cached build workspace and large binaries,
#         # or increasing compression for "perfect" textual data - like a json/xml export of a large database.
#       - name: hello-art-3
#         path: /tmp/hello_world.txt
#         archive:
#           tar:
#             # no compression (also accepts the standard gzip 1 to 9 values)
#             compressionLevel: 0
# <... snipped ...>
